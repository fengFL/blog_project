INSERT INTO `article`(`id`, `type_id`, `title`, `article_content`, `introduce`, `addTime`, `view_count`) VALUES (1, 1, 'react实战教程', '# mySql 学习笔记\n\n## 1 数据库初识\n### 1.1 分类\n-DDL (Data Defination Language): 数据定义语言，用来定义数据库对象：库、表、列等。\n\n`-DML(Data Manipulation Language): 数据操作语言，用来定义数据库记录(数据) ` insert/update/delete\n\n-DCL(Data Control Language): 数据控制语言，用来定义访问权限和安全级别\n\n`-DQL(Data Query Language): 数据查询语言，用来查询记录(数据)`\n\n## 2 DQL\n### 进阶一：基础查询\n语法： SELECT 查询列表 FROM 表名;   \n添加时间戳：unix_timestamp(now())\n特点：   \n1.查询的结果是虚拟表  \nselect 后面跟的查询列表可以有多个部分组成，中间用逗号隔开。  \n例如：select 字段1, 字段2, 表达式 from 表;  \n2.执行顺序  \n- from子句  \n- select子句  \n\n3.查询列表可以是：字段, 表达式, 常量, 函数等  \n\na.查询常量  \nSELECT 100;  \nb.查询表达式  \nSELECT 100*3;  \nc.查询单个字段  \nSELECT last_name FROM employees;  \nd.查询多个字段  \nSELECT last_name, first_name,employee_id FROM employee;  \ne.查询所有字段  \nSELECT * FROM employee;  \nf.查询函数(调用函数, 获取返回值)  \nSELECT DATABASE(); 查询当前数据库  \nSELECT VERSION(); 查询当前版本  \nSELECT USER(); 查询当前使用者  \ng.起别名  \n- 方式1：使用as关键字.如果别名有关键字就需要引号。  \nSELECT USER() AS \'用户名\';\n- 方式2：直接使用空格 省略as关键字  \n\nh.拼接两个字符 CONCAT() 函数   \nSELECT CONCAT(first_name, last_name) AS \'姓 名\' FROM employees;  \ni.去重 DISTINCT 关键字  \nSELECT DISTINCT department_id FROM employees;  \nj.DESC 表名; 查询表结构方式1  \nSHOW COLUMNS FROM 表名; 查询表结构方式2  \nDESC empoloyees;  \nSHOW COLUMNS FROM employees;\n\n\n\n4.mysql中 + 的作用  \n- 加法运算  \na.两个操作数都是数值型，直接进行加法运算  \nb.其中一个操作数为字符型  \n将字符型数据强制转换成数值型，如果无法转换，则直接当做0处理  \nc.其中一个操作数为null  \n都返回null\n\nIFNULL(表达式1，表达式2);\n如果表达式1为真就显示表达式1，如果表达式1为假，就显示表达式2.\n\n### 进阶二 条件查询  \n语法：select 查询条件 from 表名 where 筛选条件;  \n执行顺序 from子句 where子句 select子句  \n特点  \n1. 按关系表达式筛选  \n关系运算符： <  >  >=  <=  =  !=  <> 一般不等于使用 <> 不建议使用 !=  \n2. 按逻辑表达式筛选  \n逻辑运算符：    使用 and  or  not   \n    也可以使用 || && ! ，但是不建议\n3. 模糊查询  \nlike/not like：一般和通配符搭配使用，对字符型数据进行部分匹配查询  \n常见的通配符:  \n    _ 任意单个字符。  \n    % 任意多个字符    \nin/ not in：查询某字段的值是否属于指定的列表之内 \na in(常量值1, 常量值2, ...)   表示 a 是否是 in里面的值。\nbetween and / not between and :判断某个字段的值是否介于 xx 之间   \nis null / is not null:  \n\n\n\n\n\n\n\n\n    \n\n', '这个是简介说明', 1630890442, 0);
INSERT INTO `article`(`id`, `type_id`, `title`, `article_content`, `introduce`, `addTime`, `view_count`) VALUES (2, 1, 'mysql学习记录', '## 1 字体 \n<!-- // 加粗  左右两边两个* -->\n**加粗**\n<!-- 斜体 左右两边一个 * -->\n*斜体*\n<!-- 高亮 左右两边一个 ` -->\n`高亮`\n<!-- 删除线 左右两边两个 ~ -->\n~~删除线~~\n\n```javascript\n    var a = 1;\n    console.log(a);\n```\n\n\n\n\n\n\n\n\n', '这个是mysql学习内容的简介', 1630890445, 1);
INSERT INTO `article`(`id`, `type_id`, `title`, `article_content`, `introduce`, `addTime`, `view_count`) VALUES (3, 2, '生活吐槽', '吐槽吐槽吐槽吐槽吐槽吐槽吐槽吐槽吐槽吐槽吐槽吐槽吐槽吐槽吐槽吐槽吐槽吐槽吐槽吐槽吐槽吐槽吐槽吐槽', '简单的吐槽', 1630985090, 0);
